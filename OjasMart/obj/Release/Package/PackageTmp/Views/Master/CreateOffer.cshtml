@model OjasMart.Models.PropertyClass
@{
    ViewBag.Title = "Create Offer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using System.Data;

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('select').select2();
        $('#txtStartDate').datepicker({
            format: 'dd-MM-yyyy'
        });
        $('#txtEndDate').datepicker({
            format: 'dd-MM-yyyy'
        });

        $("#tblItemHead").DataTable();

        $('input[type=radio][name=radioInline0]').change(function () {
            var value1 = this.value;
            if (value1 == 'Purchase') {
                $("#divItem").hide();
                $("#divOnPurchase").show();
                $("#ddlItemGroup").val('0');
                BindItemsByGroup();
            }
            else if (value1 == 'Item') {
                $("#divItem").show();
                $("#divOnPurchase").hide();
            }
        });
        $('#chkFree').change(function () {
            if ($(this).is(":checked")) {
                $("#divFreeItem").show();
            }
            else {
                $("#divFreeItem").hide();
            }
        });

    });


    function InsertOffer() {
        var type = $('input:radio[name=radioInline0]:checked').val();
        if ($("#txtOfferName").val() == "") {
            alert("Please Enter Offer Name !!!");
            $("#txtOfferName").focus();
            return;
        }
        if (type == "Purchase") {
            if ($("#txtPurchaseAmt").val() == "") {
                alert("Please Enter On Purchase Amount !!!");
                $("#txtPurchaseAmt").focus();
                return;
            }
        }
        if (type == "Item") {
            //if ($("#ddlItemGroup").val() == "0") {
            //    alert("Select Item Group !!!");
            //    $("#ddlItemGroup").focus();
            //    return;
            //}
            if ($("#ddlItemHead").val() == "") {
                alert("Please Select Item Head !!!");
                $("#ddlItemHead").focus();
                return;
            }
        }

        if ($("#txtCashBack").val() == "") {
            alert("Please Enter Cashback Amount !!!");
            $("#txtCashBack").focus();
            return;
        }
        var st = "0";
        if ($("#OnlyForFirstPurchase").prop('checked') == true) {
            st = "1";
        }
        var IsFree = "0";
        if ($("#chkFree").prop('checked') == true) {
            st = "1";
            if ($("#ddlFreeItem").val() == "") {
                alert("Please Select Free Item !!!");
                $("#ddlFreeItem").focus();
                return;
            }
            if ($.trim($("#txtFreeQty").val()) == "" || $.trim($("#txtFreeQty").val()) == "0") {
                alert("Please Enter Free Quantity !!!");
                $("#txtFreeQty").focus();
                return;
            }
        }

        var dataobject = {
            Action: "1",
            OfferTitle: $("#txtOfferName").val(),
            OfferType: type,
            ItemCode: $("#ddlItemHead").val(),
            OnPurchaseAmount: $("#txtPurchaseAmt").val() != "" ? parseFloat($("#txtPurchaseAmt").val()) : 0,
            CashBackAmount: $("#txtCashBack").val() != "" ? parseFloat($("#txtCashBack").val()) : 0,
            ValidStartDate: $("#txtStartDate").val() != "" ? $("#txtStartDate").val() : "01/01/1900",
            ValidEndDate: $("#txtEndDate").val() != "" ? $("#txtEndDate").val() : "01/01/1900",
            Points: $("#txtPoints").val() != "" ? parseFloat($("#txtPoints").val()) : 0,
            AmountPerPoint: $("#txtPointAmount").val() != "" ? parseFloat($("#txtPointAmount").val()) : 0,
            Status: st,
            IsFreeItem: IsFree,
            FreeItemCode: $("#ddlFreeItem").val(),
            FreeQty: $("#txtFreeQty").val() != "" ? parseFloat($("#txtFreeQty").val()) : 0,
        };
        $("#showSpinner").show();
        $.ajax({
            url: "/Master/InsertOfferDetails",
            type: "POST",
            contentType: false,
            processData: false,
            //data: dataobject,
            data: JSON.stringify(dataobject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                if (r.strId == '1') {
                    alert(r.msg);
                    location.reload();
                }
                else {
                    alert('Server not Responding !!!');
                    $("#showSpinner").hide();
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert('Please Check values Entered by you !!!');
                $("#showSpinner").hide();
            }
        });
    }


    function UpdateOfferDetails() {
        if ($("#hdOfferCode").val() == "") {
            alert("Offer Code Not Found !!!");
            return;
        }
        var type = $('input:radio[name=radioInline0]:checked').val();
        if ($("#txtOfferName").val() == "") {
            alert("Please Enter Offer Name !!!");
            $("#txtOfferName").focus();
            return;
        }
        if (type == "Purchase") {
            if ($("#txtPurchaseAmt").val() == "") {
                alert("Please Enter On Purchase Amount !!!");
                $("#txtPurchaseAmt").focus();
                return;
            }
        }
        if (type == "Item") {
            //if ($("#ddlItemGroup").val() == "0") {
            //    alert("Select Item Group !!!");
            //    $("#ddlItemGroup").focus();
            //    return;
            //}
            if ($("#ddlItemHead").val() == "") {
                alert("Please Select Item Head !!!");
                $("#ddlItemHead").focus();
                return;
            }
        }

        if ($("#txtCashBack").val() == "") {
            alert("Please Enter Cashback Amount !!!");
            $("#txtCashBack").focus();
            return;
        }
        var st = "0";
        if ($("#OnlyForFirstPurchase").prop('checked') == true) {
            st = "1";
        }
        var IsFree = "0";
        if ($("#chkFree").prop('checked') == true) {
            st = "1";
            if ($("#ddlFreeItem").val() == "") {
                alert("Please Select Free Item !!!");
                $("#ddlFreeItem").focus();
                return;
            }
            if ($.trim($("#txtFreeQty").val()) == "" || $.trim($("#txtFreeQty").val()) == "0") {
                alert("Please Enter Free Quantity !!!");
                $("#txtFreeQty").focus();
                return;
            }
        }

        var dataobject = {
            Action: "3",
            RespoCode: $("#hdOfferCode").val(),
            OfferTitle: $("#txtOfferName").val(),
            OfferType: type,
            ItemCode: $("#ddlItemHead").val(),
            OnPurchaseAmount: $("#txtPurchaseAmt").val() != "" ? parseFloat($("#txtPurchaseAmt").val()) : 0,
            CashBackAmount: $("#txtCashBack").val() != "" ? parseFloat($("#txtCashBack").val()) : 0,
            ValidStartDate: $("#txtStartDate").val() != "" ? $("#txtStartDate").val() : "01/01/1900",
            ValidEndDate: $("#txtEndDate").val() != "" ? $("#txtEndDate").val() : "01/01/1900",
            Points: $("#txtPoints").val() != "" ? parseFloat($("#txtPoints").val()) : 0,
            AmountPerPoint: $("#txtPointAmount").val() != "" ? parseFloat($("#txtPointAmount").val()) : 0,
            Status: st,
            IsFreeItem: IsFree,
            FreeItemCode: $("#ddlFreeItem").val(),
            FreeQty: $("#txtFreeQty").val() != "" ? parseFloat($("#txtFreeQty").val()) : 0,
        };
        $("#showSpinner").show();
        $.ajax({
            url: "/Master/InsertOfferDetails",
            type: "POST",
            contentType: false,
            processData: false,
            //data: dataobject,
            data: JSON.stringify(dataobject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (r) {
                if (r.strId == '1') {
                    alert(r.msg);
                    location.reload();
                }
                else {
                    alert('Server not Responding !!!');
                    $("#showSpinner").hide();
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert('Please Check values Entered by you !!!');
                $("#showSpinner").hide();
            }
        });
    }

    function GetDetailsForEdit(ItemCode) {
        var dataobject = {
            OfferId: ItemCode
        };
        $.ajax({
            type: "POST",
            url: "/Master/GetOfferDetailsForEdit",
            data: dataobject,
            dataType: "json",
            success: function (r) {
                if (r != null) {
                    $("#hdOfferCode").val(r.RespoCode);
                    $("#txtOfferName").val(r.OfferTitle);
                    $("#txtPurchaseAmt").val(r.OnPurchaseAmount);
                    $('#txtCashBack').val(r.CashBackAmount);
                    $('#txtPoints').val(r.Points);
                    $('#txtPointAmount').val(r.AmountPerPoint);
                    $('#txtStartDate').val(r.mDate);
                    $('#txtEndDate').val(r.eDate);
                    
                    $('#ddlItemHead').val(r.ItemCode);
                    if (r.Status == "1") {
                        $("#OnlyForFirstPurchase").attr("checked", "checked");
                    }

                    if (r.OfferType == "Purchase") {
                        $("#inlineRadio1").attr("checked", "checked");
                        $("#divItem").hide();
                        $("#divOnPurchase").show();

                    }
                    else {
                        $("#inlineRadio2").attr("checked", "checked");
                        $("#divItem").show();
                        $("#divOnPurchase").hide();
                    }

                    $("#txtOfferName").focus();

                    $("#btnSave").hide();
                    $("#btnUpdate").show();
                    $("#btnCancel").show();
                    $("#ddlItemHead").select2();
                }
                else {
                    alert("Item Details Not Found !!!");
                }
            }
        });
    }
    function CancelUpdate() {
        location.reload();
    }
    function DeleteItemHeadDetails(ItemCode) {
        var x = confirm("Are you sure you want to delete?");
        if (x) {
            var dataobject = {
                ItemCode1: ItemCode
            };
            $.ajax({
                type: "POST",
                url: "/Master/DeleteOfferDetails",
                data: dataobject,
                dataType: "json",
                success: function (r) {
                    if (r.strId == "1") {
                        alert(r.msg);
                        location.reload();
                    }
                    else {
                        alert(r.msg);
                    }
                }
            });
        }
        else {
            return false;
        }
    }

    function BindItemsByGroup() {
        $("#ddlItemHead").empty();
        $.ajax({
            type: 'Post',
            url: '@Url.Action("GetItemsByGroup", "Sales")',
            dataType: 'json',
            data: { GroupCode: $("#ddlItemGroup").val() },
            success: function (data) {
                $.each(data, function (i, data) {
                    $("#ddlItemHead").append('<option value="'
                        + data.Value + '">' +
                        data.Text + '</option>');
                });
                $("#ddlItemHead").val('');
            },
            error: function (ex) {
                alert('Failed to retrieve Items : ' + ex);
            }
        });
    }
</script>
<my-spinner>
    <div ng-show="showSpinner" class="nexo-overlay ng-hide" style="width: 100%; height: 100%; background: rgba(255, 255, 255, 0.9); z-index: 5000; position: absolute; top: 0px; left: 0px;display:none" id="showSpinner">
        <div class="spinner-border m-2" role="status" style="position: absolute; top: 30%; left: 50%; margin-top: -25px; margin-left: -25px;"></div>
    </div>
</my-spinner>
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">

            </div>
            <h4 class="page-title">Create Offer</h4>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <p class="text-muted mt-3 mb-2">Offer On <span style="color:red">*</span></p>
                        <div class="radio radio-info form-check-inline">
                            <input type="radio" id="inlineRadio1" value="Purchase" name="radioInline0" checked>
                            <label for="inlineRadio1"> On Purchase/Bulk </label>
                        </div>
                        <div class="radio form-check-inline">
                            <input type="radio" id="inlineRadio2" value="Item" name="radioInline0">
                            <label for="inlineRadio2"> On Item </label>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-8">
                        <label for="inputEmail4" class="col-form-label">Offer Name <span style="color:red">*</span> </label>
                        <input type="text" class="form-control" id="txtOfferName" placeholder="Offer Name" />
                        <input type="hidden" id="hdOfferCode" />
                    </div>
                </div>
                <div class="form-row" id="divItem" style="display:none">
                    <div class="form-group col-md-4" style="display:none">
                        <label for="inputPassword4" class="col-form-label">Item Group <span style="color:red">*</span></label>
                        @Html.DropDownList("ddlItemGroup", (List<SelectListItem>)ViewBag.ItemGroupList, new { @id = "ddlItemGroup", @class = "form-control", @onchange = "BindItemsByGroup()" })
                    </div>
                    <div class="form-group col-md-8">
                        <label for="inputEmail4" class="col-form-label">Item Name <span style="color:red">*</span> </label>
                        @*<select id="ddlItemHead" class="form-control"></select>*@
                        @Html.DropDownList("ddlItemHead", (List<SelectListItem>)ViewBag.ItemHeadList, new { @id = "ddlItemHead", @class = "form-control" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4" id="divOnPurchase">
                        <label for="inputPassword4" class="col-form-label">On Purchase of <span style="color:red">*</span></label>
                        <input type="text" class="form-control" id="txtPurchaseAmt" placeholder="On Purchase of">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputAddress" class="col-form-label">Cashback <span style="color:red">*</span></label>
                        <input type="text" class="form-control" id="txtCashBack" placeholder="Enter Cashback Amount">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputPassword4" class="col-form-label">Points</label>
                        <input type="text" class="form-control" id="txtPoints" placeholder="Enter Points">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputPassword4" class="col-form-label">Amount per Point</label>
                        <input type="text" class="form-control" id="txtPointAmount" placeholder="Enter Amount per Point">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="inputPassword4" class="col-form-label">Offer Start Form</label>
                        <input type="text" class="form-control" id="txtStartDate" placeholder="Offer Start Form">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="inputPassword4" class="col-form-label">Offer End at</label>
                        <input type="text" class="form-control" id="txtEndDate" placeholder="Offer End at">
                    </div>
                    <div class="form-group col-md-4">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="OnlyForFirstPurchase">
                            <label class="custom-control-label text-info" for="OnlyForFirstPurchase" style="margin-top:45px">Is Offer for only on first Purchase !</label>
                        </div>
                    </div>
                </div>
                <div class="custom-control custom-checkbox" style="display:block">
                    <input type="checkbox" class="custom-control-input" id="chkFree">
                    <label class="custom-control-label text-info" for="chkFree">Free Item</label>
                </div>
                <div class="form-row" id="divFreeItem" style="display:none">
                    <div class="form-group col-md-6">
                        <label for="inputPassword4" class="col-form-label">Select Free Item<span class="text-danger">*</span></label>
                        @Html.DropDownList("ddlFreeItem", (List<SelectListItem>)ViewBag.ItemHeadList, new { @id = "ddlFreeItem", @class = "form-control" })
                    </div>
                    <div class="form-group col-md-2">
                        <label for="inputEmail4" class="col-form-label">Quantity<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="txtFreeQty" value="1" placeholder="Quantity">
                    </div>
                </div>
                <hr />
                <button type="submit" id="btnSave" class="btn btn-primary waves-effect waves-light" onclick="InsertOffer()">Save Record</button>
                <button type="submit" id="btnUpdate" style="display:none" class="btn btn-warning waves-effect waves-light" onclick="UpdateOfferDetails()">Update Record</button>
                <button type="submit" id="btnCancel" style="display:none" class="btn btn-danger waves-effect waves-light" onclick="CancelUpdate()">Cancel</button>
            </div>
        </div>
    </div> <!-- end card-body -->
</div> <!-- end card-->

<div class="row">
    <div class="col-sm-12">
        <div class="card-box">
            <h4 class="header-title">Offer Details</h4>
            <div class="table-responsive">
                <table id="tblItemHead" class="table table-borderless table-hover table-centered m-0">
                    <thead class="thead-light">
                        <tr>
                            <th>Sr.No</th>
                            <th>Offer</th>
                            <th>Item Name</th>
                            <th>On Purchase of</th>
                            <th>Cashback</th>
                            <th>Points</th>
                            <th>Amt./Point</th>
                            <th>Added Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.dt != null && Model.dt.Rows.Count > 0)
                        {
                            int i = 0;
                            foreach (DataRow dr in Model.dt.Rows)
                            {
                                i++;
                                <tr>
                                    <td>@i</td>
                                    <td>
                                        <h5 class="m-0 font-weight-normal">@dr["OfferTitle"]</h5>
                                        <p class="mb-0 text-muted"><small>@dr["OfferCode"]</small></p>
                                        <p class="mb-0 text-muted">
                                            <small>
                                                @if (dr["OfferType"].ToString() == "On Purchase")
                                                {
                                                    <span class="badge badge-success">@dr["OfferType"]</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger">@dr["OfferType"]</span>
                                                }
                                            </small>
                                        </p>
                                    </td>
                                    <td>@dr["ItemName"]</td>
                                    <td>@dr["PurchaseAmount"]</td>
                                    <td>@dr["CashBackAmount"]</td>
                                    <td>@dr["Points"]</td>
                                    <td>@dr["AmountPerPoint"]</td>
                                    <td>@dr["AddedDate"]</td>
                                    <td>
                                        @*<a href="javascript: void(0);" class="btn btn-xs btn-secondary" onclick="GetDetailsForEdit('@dr["ItemCode"]')"><i class="mdi mdi-pencil"></i></a>

                                            <a href="javascript:void(0);" class="action-icon"> <i class="mdi mdi-eye"></i></a>*@
                                        <a href="javascript:void(0);" title="Edit" class="action-icon" onclick="GetDetailsForEdit('@dr["OfferCode"]')"> <i class="mdi mdi-square-edit-outline" style="color:#51bfd0"></i></a>
                                        <a href="javascript:void(0);" title="Delete" class="action-icon" onclick="DeleteItemHeadDetails('@dr["OfferCode"]')"> <i class="mdi mdi-delete" style="color:red"></i></a>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>
        </div> <!-- end card-box-->
    </div> <!-- end col-->
</div>
